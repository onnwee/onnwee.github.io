name: Project Automation (Status Labels)
on:
    issues:
        types: [opened, edited, labeled, unlabeled, reopened]
    pull_request:
        types: [opened, edited, labeled, unlabeled, reopened, closed]

jobs:
    status:
        runs-on: ubuntu-latest
        permissions:
            issues: write
            pull-requests: write
        steps:
            - name: Set default status on new issues
              if: github.event_name == 'issues' && github.event.action == 'opened'
              uses: actions-ecosystem/action-add-labels@v1
              with:
                  github_token: ${{ secrets.PROJECT_TOKEN }}
                  labels: |
                      status: backlog

            - name: Move to in progress when assigned
              if: github.event_name == 'issues' && github.event.action == 'edited' && contains(toJson(github.event.issue.assignee), 'login')
              uses: actions-ecosystem/action-add-labels@v1
              with:
                  github_token: ${{ secrets.PROJECT_TOKEN }}
                  labels: |
                      status: in progress

            - name: Move to review when PR opened referencing issue
              if: github.event_name == 'pull_request' && (github.event.action == 'opened' || github.event.action == 'reopened')
              uses: actions/github-script@v7
              with:
                  script: |
                      const body = context.payload.pull_request.body || '';
                      const issueRefs = [...body.matchAll(/#(\d+)/g)].map(m => Number(m[1]));
                      for (const num of issueRefs) {
                        await github.rest.issues.addLabels({
                          owner: context.repo.owner,
                          repo: context.repo.repo,
                          issue_number: num,
                          labels: ['status: review']
                        });
                      }

            - name: Move to done when PR closes issue
              if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
              uses: actions/github-script@v7
              with:
                  script: |
                      const body = context.payload.pull_request.body || '';
                      const issueRefs = [...body.matchAll(/#(\d+)/g)].map(m => Number(m[1]));
                      for (const num of issueRefs) {
                        await github.rest.issues.addLabels({
                          owner: context.repo.owner,
                          repo: context.repo.repo,
                          issue_number: num,
                          labels: ['status: done']
                        });
                      }
